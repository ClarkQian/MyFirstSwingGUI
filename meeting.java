/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.Rectangle;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Timer;
import java.util.Vector;
import javax.sound.sampled.Clip;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Timer;
import java.util.TimerTask;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author dreamworld
 */
public class MeetingFrame extends javax.swing.JFrame {

    /**
     * Creates new form MeetingFrame
     */
    public MeetingFrame() {
        initComponents();
        initVideo();
        initTimer();
    }

    /**
     * This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jYear = new javax.swing.JComboBox<>();
        canvas1 = new java.awt.Canvas();
        jLabel2 = new javax.swing.JLabel();
        jMonth = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jDay = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jHour = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jMin = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jDuration = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLocation = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jDescriptionTextArea = new javax.swing.JTextArea();
        jSubmit = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jDescriptionLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLocationLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTimeLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDurationLabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSearch = new javax.swing.JButton();
        jLocationRadio = new javax.swing.JRadioButton();
        jTimeRadio = new javax.swing.JRadioButton();
        jDurationRadio = new javax.swing.JRadioButton();
        jCountLabel = new javax.swing.JLabel();
        jClockLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jUpLabel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {"2019-01-10", "12:30", "NanTong", "40", "Important meeting"},
                        {"2018-02-10", "11:30", "NanTong", "50", "yes"},
                        {"2018-02-11", "9:30", "Yangzhout", "10", "no"},
                        {"2018-02-12", "21:30", "nanjing", "20", "ok"},
                        {"2018-03-21", "12:30", "NanTong", "40", null},
                        {"2018-03-21", "14:00", "YangZhou", "60", null},
                        {"2018-03-21", "17:00", "YangZhou", "60", null},
                        {"2018-03-21", "19:00", "Beijing", "60", null},
                        {"2018-03-21", "22:00", "NanTong", "60", null}
                },
                new String [] {
                        "Date", "Time", "Location", "Duration", "Description"
                }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Date:");

        jYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));
        jYear.setSelectedItem(jYear);

        jLabel2.setText("—");

        jMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMonthActionPerformed(evt);
            }
        });

        jLabel3.setText("—");

        jDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDayActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Time:");

        jHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        jLabel5.setText(":");

        jMin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Duration:");

        jDuration.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel7.setText("min");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Location:");

        jLocation.setText("jTextField1");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Description:");

        jDescriptionTextArea.setColumns(20);
        jDescriptionTextArea.setRows(5);
        jScrollPane2.setViewportView(jDescriptionTextArea);

        jSubmit.setText("Submit");
        jSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitActionPerformed(evt);
            }
        });

        jDelete.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jDelete.setText("Delete");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel10.setText("Today latest meeting:");

        jDescriptionLabel.setForeground(new java.awt.Color(0, 153, 204));
        jDescriptionLabel.setText("Important meeting xxxxxxxxxxxxx");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("At");

        jLocationLabel.setForeground(new java.awt.Color(153, 0, 255));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("On");

        jTimeLabel.setForeground(new java.awt.Color(255, 51, 51));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Last");

        jDurationLabel.setForeground(new java.awt.Color(0, 102, 51));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("min");

        jProgressBar.setIndeterminate(true);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Process:");

        jLabel16.setForeground(new java.awt.Color(0, 102, 102));
        jLabel16.setText("Double click to modify.");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setText("Meetings/Appointments Details");

        jLabel18.setText("Copyright Reserved By 633");

        jButton1.setText("<back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSearch.setText("Search");
        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });

        jLocationRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLocationRadioActionPerformed(evt);
            }
        });

        jTimeRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTimeRadioActionPerformed(evt);
            }
        });

        jDurationRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDurationRadioActionPerformed(evt);
            }
        });

        jCountLabel.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jCountLabel.setForeground(new java.awt.Color(255, 0, 0));
        jCountLabel.setText("There are n records!");

        jClockLabel.setText("23:30:15");

        jLabel19.setText("Time:");

        jLabel20.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 51));
        jLabel20.setText("The time is up!");

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jUpLabelLayout = new javax.swing.GroupLayout(jUpLabel);
        jUpLabel.setLayout(jUpLabelLayout);
        jUpLabelLayout.setHorizontalGroup(
                jUpLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jUpLabelLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(2, 2, 2)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jUpLabelLayout.setVerticalGroup(
                jUpLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jUpLabelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jUpLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel20)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator1)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18)
                                .addGap(363, 363, 363))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addGap(24, 24, 24)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel11)
                                                                                .addGap(35, 35, 35)
                                                                                .addComponent(jLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel15)
                                                                        .addComponent(jLabel10)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jButton1)
                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jClockLabel)
                                                .addGap(57, 57, 57))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(jLocationRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(jLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addGap(69, 69, 69)
                                                                                                .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                .addGap(46, 46, 46)
                                                                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jLabel2)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(jLabel3)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(29, 29, 29)
                                                                                .addComponent(jTimeRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jLabel4)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jHour, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jLabel5)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(32, 32, 32)
                                                                                .addComponent(jDurationRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(jLabel7))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(147, 147, 147)
                                                                                .addComponent(jDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(33, 33, 33))
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(113, 113, 113)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(99, 99, 99)
                                                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16)
                                        .addComponent(jCountLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jClockLabel)
                                                        .addComponent(jLabel19))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLocationLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jTimeLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel13)
                                                        .addComponent(jDurationLabel)
                                                        .addComponent(jLabel14))
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(11, 11, 11))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jDelete))
                                                .addGap(36, 36, 36)
                                                .addComponent(jDurationRadio)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(69, 69, 69)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel1)
                                                                .addComponent(jYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel2)
                                                                .addComponent(jMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel3)
                                                                .addComponent(jDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel4)
                                                                .addComponent(jHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel5)
                                                                .addComponent(jMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel6)
                                                                .addComponent(jDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel7))
                                                        .addComponent(jTimeRadio))
                                                .addGap(28, 28, 28)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel8)
                                                                        .addComponent(jLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel9)
                                                                        .addComponent(jLocationRadio))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jSubmit)
                                                                        .addComponent(jSearch))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(7, 7, 7)
                                                .addComponent(jLabel18))))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(272, 272, 272)
                                .addComponent(jUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        jHour.getAccessibleContext().setAccessibleDescription("");
        jHour.getAccessibleContext().setAccessibleParent(null);
        jCountLabel.setVisible(false);

        jUpLabel.setVisible(false);

        pack();
    }// </editor-fold>

    private void jDayActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jMonthActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    //delete button
    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow != -1)
            ((DefaultTableModel)jTable1.getModel()).removeRow(selectedRow);
    }

    private void jSubmitActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String year = jYear.getSelectedItem().toString();
        String month = jMonth.getSelectedItem().toString();
        String day = jDay.getSelectedItem().toString();
        String data = year + "-"+ month + "-" + day; //the first key
//		Integer hour = Integer.parseInt((String) jHour.getValue());
        int hour = Integer.parseInt(jHour.getValue().toString());
        String timep1 = String.format("%02d", hour);
        int min = Integer.parseInt(jMin.getValue().toString());
        String timep2 = String.format("%02d", min);
        String time = timep1+":"+timep2; //the second key.
        Vector<Vector> dataVector = ((DefaultTableModel)jTable1.getModel()).getDataVector();
        for(int i = 0; i < dataVector.size(); i++){
            //if there have repeated name -> stop
            if (String.valueOf(dataVector.elementAt(i).get(0)).equals(data)){
                if (String.valueOf(dataVector.elementAt(i).get(1)).equals(time)){
                    String message = data +" "+time+" has already in your contact";
                    jTable1.setRowSelectionInterval(i, i);
                    Rectangle rect = jTable1.getCellRect(i, 0, true);
                    jTable1.scrollRectToVisible(rect);
                    JOptionPane.showMessageDialog(this,message, "ERROR", JOptionPane.ERROR_MESSAGE );
                    return;
                }
            }
        }
        String location = jLocation.getText();
        String duration = jDuration.getValue().toString();
        String description = jDescriptionTextArea.getText();
        String[] rowData = {data, time, location, duration, description};
        ((DefaultTableModel)jTable1.getModel()).addRow(rowData);

    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        //divide the element to the Textfield sample.
        jCountLabel.setVisible(false);
        int[] selectedRows = jTable1.getSelectedRows();
        if(selectedRows.length == 1){
            int selectedRow = jTable1.getSelectedRow();
            int selectedCol = jTable1.getSelectedColumn();
            if(selectedCol == -1 || selectedRow == -1)
                return;
            if(jTable1.getValueAt(selectedRow, selectedCol) != null)
                origialString = jTable1.getValueAt(selectedRow, selectedCol).toString();
            String item = jTable1.getValueAt(selectedRow, 0).toString();
            Object[] values = item.split("-");
            jYear.setSelectedItem(values[0]);
            jMonth.setSelectedItem(values[1]);
            jDay.setSelectedItem(values[2]);
            item = jTable1.getValueAt(selectedRow, 1).toString();
            values = item.split(":");
            jHour.setValue(Integer.parseInt(values[0].toString()));
            jMin.setValue(Integer.parseInt(values[1].toString()));
            item = jTable1.getValueAt(selectedRow, 2).toString();
            jLocation.setText(item);
            item = jTable1.getValueAt(selectedRow, 3).toString();
            jDuration.setValue(Integer.parseInt(item));
            if(jTable1.getValueAt(selectedRow, 4) != null)
                item = jTable1.getValueAt(selectedRow, 4).toString();
            jDescriptionTextArea.setText(item);
            origialString = jTable1.getValueAt(selectedRow, selectedCol).toString();
            System.out.println(origialString);
        }

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    //searchButton
    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        //this vector is used to support multi conditional search
        Vector<Integer> choosing = new Vector<Integer>();
        choosing.add(0);
        if(jTimeRadio.isSelected())
            choosing.add(1);
        if(jLocationRadio.isSelected())
            choosing.add(2);
        if(jDurationRadio.isSelected())
            choosing.add(3);
//		System.out.println(choosing.size());
        String year = jYear.getSelectedItem().toString();
        String month = jMonth.getSelectedItem().toString();
        String day = jDay.getSelectedItem().toString();
        String data = year + "-"+ month + "-" + day; //the first key
//		Integer hour = Integer.parseInt((String) jHour.getValue());
        int hour = Integer.parseInt(jHour.getValue().toString());
        String timep1 = String.format("%02d", hour);
        int min = Integer.parseInt(jMin.getValue().toString());
        String timep2 = String.format("%02d", min);
        String time = timep1+":"+timep2; //the second key.
        String location = jLocation.getText();
        String duration = jDuration.getValue().toString();
        Vector<Vector> dataVector = ((DefaultTableModel)jTable1.getModel()).getDataVector();
        //count is used to jump
        jTable1.clearSelection();
        boolean tag = false;
        boolean tag2 = true;
        int count = 0;
        //row traverse
        for(int i = 0; i < dataVector.size(); i++){
            //if there has matched record.
            if (String.valueOf(dataVector.elementAt(i).get(0)).equalsIgnoreCase(data)){
                tag = true;
                if (choosing.size() > 1){
                    for(Integer in : choosing){

//						if (in.equals(1)&& !String.valueOf(dataVector.elementAt(i).get(1)).equalsIgnoreCase(time)) tag = false;
//						if (in.equals(2)&& !String.valueOf(dataVector.elementAt(i).get(2)).equalsIgnoreCase(location)) tag = false;
//						if (in.equals(3)&& !String.valueOf(dataVector.elementAt(i).get(3)).equalsIgnoreCase(duration)) tag = false;
                        if (in == 1){
                            System.out.println("time");
                            System.out.println(time);
                            System.out.println(dataVector.elementAt(i).get(1).toString());
                            if(!String.valueOf(dataVector.elementAt(i).get(1)).equalsIgnoreCase(time))tag2 = false;
                        }
                        if (in == 2){
                            System.out.println("Location");
                            if(!String.valueOf(dataVector.elementAt(i).get(2)).equalsIgnoreCase(location)) tag2 = false;
                        }
                        if(in == 3){
                            System.out.println("Duration");
                            if(!String.valueOf(dataVector.elementAt(i).get(3)).equalsIgnoreCase(duration)) tag2 = false;
                        }
                    }
                }else {
                    tag = true;
                }

                System.out.println(tag2);
                if(tag == true && tag2 == true){
                    count += 1;
                    jTable1.addRowSelectionInterval(i, i);
                }

                if (count == 1){
                    Rectangle rect = jTable1.getCellRect(i, 0, true);
                    jTable1.scrollRectToVisible(rect);
//					System.out.println(count);
//					return;
                }
                tag = false;
                tag2 = true;
            }
            jCountLabel.setText("There are "+count+" records!");
            jCountLabel.setVisible(true);

        }


    }

    private void jLocationRadioActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jTimeRadioActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jDurationRadioActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void initColck(){
        Vector<Vector> dataVector = ((DefaultTableModel)jTable1.getModel()).getDataVector();
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH)+1;
        int day = cal.get(Calendar.DAY_OF_MONTH);
        String tm = String.format("%d-%02d-%02d", year, month, day);
        for(int i = 0; i < dataVector.size(); i++){
            if(String.valueOf(dataVector.elementAt(i).get(0)).equals(tm)){
                boolean tag = true;
                if (hasTime.size() > 0){

                    for(int j = 0; j < hasTime.size(); j++){
                        if(String.valueOf(dataVector.elementAt(i).get(1)).equals(hasTime.get(j)))
                            tag = false;
                    }
                }
                if (tag == false) continue;
                String time = String.valueOf(dataVector.elementAt(i).get(1));
                String []timePart = time.split(":");
                int currentHour = cal.get(Calendar.HOUR_OF_DAY);
                int hour = Integer.parseInt(timePart[0]);
                if(currentHour < hour){
                    jTimeLabel.setText(String.valueOf(dataVector.elementAt(i).get(1)));
                    jLocationLabel.setText(String.valueOf(dataVector.elementAt(i).get(2)));
                    jDurationLabel.setText(String.valueOf(dataVector.elementAt(i).get(3)));
                    jDescriptionLabel.setText(String.valueOf(dataVector.elementAt(i).get(4)));
                    int percent = currentHour*100/hour;
                    jProgressBar.setIndeterminate(false);
                    jProgressBar.setValue(percent);
                    hasTime.add(String.valueOf(dataVector.elementAt(i).get(1)));
                    timeReached = false;
                    return;
                }
            }
        }
        jTimeLabel.setText("");
        jLocationLabel.setText("");
        jDurationLabel.setText("");
        jProgressBar.setIndeterminate(true);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        initColck();
    }
    public void initVideo(){
        try { // 初始化闹钟声音
            // only support wav
            AudioInputStream ais = AudioSystem.getAudioInputStream(MeetingFrame.class.getResource(filePath));
            //clip is frame number
            clip = AudioSystem.getClip();
            clip.open(ais);
            ais.close();
            //start from 1 if no specify
            int loop = LOOP_COUNT <= 0 ? 1 : LOOP_COUNT;
            final long totalFrames = ais.getFrameLength() * loop;
            clip.addLineListener(new LineListener() {
                @Override
                public void update(LineEvent e) {
                    // 当闹钟音乐播放结束时，自动隐藏顶部提示栏
                    if(e.getFramePosition() >= totalFrames) {
                        stopAlarm();
                    }
                }
            });
        } catch (UnsupportedAudioFileException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (LineUnavailableException e) {
            e.printStackTrace();
        }

    }
    public void initTimer(){
        //初始化边栏包括进度条
        Vector<Vector> dataVector = ((DefaultTableModel)jTable1.getModel()).getDataVector();
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH)+1;
        int day = cal.get(Calendar.DAY_OF_MONTH);
        String tm = String.format("%d-%02d-%02d", year, month, day);
        for(int i = 0; i < dataVector.size(); i++){
            if(String.valueOf(dataVector.elementAt(i).get(0)).equals(tm) ){

                String time = String.valueOf(dataVector.elementAt(i).get(1));
                String []timePart = time.split(":");
                int currentHour = cal.get(Calendar.HOUR_OF_DAY);
                int hour = Integer.parseInt(timePart[0]);
                System.out.println(hour);
                if(currentHour < hour){
                    jTimeLabel.setText(String.valueOf(dataVector.elementAt(i).get(1)));
                    jLocationLabel.setText(String.valueOf(dataVector.elementAt(i).get(2)));
                    jDurationLabel.setText(String.valueOf(dataVector.elementAt(i).get(3)));
                    int percent = currentHour*100/hour;
                    jProgressBar.setIndeterminate(false);
                    jProgressBar.setValue(percent);

                    hasTime.add(String.valueOf(dataVector.elementAt(i).get(1)));
                    timeReached = false;
                    break;
                }
            }
        }

        timer = new Timer(); // 初始化倒计时任务
        // 开始倒计时
        timer.scheduleAtFixedRate(new TimerTask() {
            //TODO realize the left inital codes here.
            @Override
            public void run() {
                Calendar cal = Calendar.getInstance();
                int hour = cal.get(Calendar.HOUR_OF_DAY);
                int min = cal.get(Calendar.MINUTE);
                int sec = cal.get(Calendar.SECOND);
                // 设置倒计时文本
                jClockLabel.setText(String.format("%02d : %02d : %02d", hour, min, sec));
                if(null != alarmCal && !timeReached) {
                    int alarmHour = alarmCal.get(Calendar.HOUR_OF_DAY);
                    int alarmMin = alarmCal.get(Calendar.MINUTE);
                    if(alarmHour == hour && alarmMin == min) { // 到时间时播放声音
                        timeReached = true;
                        System.out.println("Time over");
                        startAlarm();
                    }
                }
            }
        }, 0, 1000L); // 每隔1秒刷新倒计时文本
    }
    //播放闹钟
    private void startAlarm() {
        if(null != clip) {
            jUpLabel.setVisible(true); // jump the "The time is up!"
            //Todo  add refresh code here about left column
//		jLabel6.setText("");
            clip.setFramePosition(0); // let the frame to 0
            clip.loop(LOOP_COUNT); // start play the video
        }
    }
    //停止闹钟
    private void stopAlarm() { // 停止播放提示音
        if(null != clip && clip.isRunning()) {
            clip.stop(); // 结束播放
        }
        //Todo SET THE LETTER LABEL
//	    jLabel6.setText("");
        jUpLabel.setVisible(false); // 隐藏顶部提示栏
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeetingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeetingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private java.awt.Canvas canvas1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jClockLabel;
    private javax.swing.JLabel jCountLabel;
    private javax.swing.JComboBox<String> jDay;
    private javax.swing.JButton jDelete;
    private javax.swing.JLabel jDescriptionLabel;
    private javax.swing.JTextArea jDescriptionTextArea;
    private javax.swing.JSpinner jDuration;
    private javax.swing.JLabel jDurationLabel;
    private javax.swing.JRadioButton jDurationRadio;
    private javax.swing.JSpinner jHour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLocation;
    private javax.swing.JLabel jLocationLabel;
    private javax.swing.JRadioButton jLocationRadio;
    private javax.swing.JSpinner jMin;
    private javax.swing.JComboBox<String> jMonth;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jSearch;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jSubmit;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jTimeLabel;
    private javax.swing.JRadioButton jTimeRadio;
    private javax.swing.JPanel jUpLabel;
    private javax.swing.JComboBox<String> jYear;
    // End of variables declaration
    private String origialString;
    private static final int LOOP_COUNT = 5;
    private Timer timer;
    private Clip clip;
    private Calendar alarmCal;
    private boolean timeReached = true;
    private DateFormat df = new SimpleDateFormat("HH:mm");
    private String filePath = "test.wav";
    private Vector<String> hasTime = new Vector<>();
}
